plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'es.rodrimmb'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.vertx:vertx-web:3.9.0'
    compile 'io.vertx:vertx-service-proxy:3.9.0'
    compile 'io.vertx:vertx-web-client:3.9.0'
    compile 'io.vertx:vertx-jdbc-client:3.9.0'
    compile 'io.vertx:vertx-web-templ-freemarker:3.9.0'
    compile 'io.vertx:vertx-auth-jdbc:3.9.0'
    compile 'com.github.rjeschke:txtmark:0.13'
    compile 'io.vertx:vertx-jdbc-client'
    compile 'org.postgresql:postgresql:42.2.12'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    compileOnly 'io.vertx:vertx-codegen:3.9.0'

    testCompile 'io.vertx:vertx-junit5:3.9.0'
    testCompile 'org.hsqldb:hsqldb:2.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    annotationProcessor 'io.vertx:vertx-codegen:3.9.0'
    annotationProcessor 'io.vertx:vertx-service-proxy:3.9.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

mainClassName = 'io.vertx.core.Launcher'

shadowJar {
    manifest {
        attributes 'Main-Verticle': 'es.rodrimmb.wiki.MainVerticle'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

sourceSets {
    generated{
        java.srcDir "${projectDir}/src/generated/java"
    }
}

task generateProxies(type: JavaCompile) {
    group 'build'
    description 'Generates the Vert.x proxies'
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly + configurations.annotationProcessor
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-Acodegen.output=${projectDir}/src/main"
    ]
    destinationDir = file("${projectDir}/src/generated/java")
}

compileJava{
    dependsOn generateProxies
    source += sourceSets.generated.java
    options.compilerArgs += '-proc:none'
}

clean {
    delete += sourceSets.generated.java.srcDirs
}

